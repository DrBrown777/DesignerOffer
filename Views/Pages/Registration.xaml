<Page x:Class="Designer_Offer.Views.Pages.Registration"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:vm="clr-namespace:Designer_Offer.ViewModels"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:Designer_Offer.Infrastructure.Validations"
      d:DataContext="{d:DesignInstance Type=vm:RegistrationViewModel}"
      mc:Ignorable="d" 
      d:DesignHeight="436" d:DesignWidth="276"
      Title="{Binding Path=Title}"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="12"
      TextOptions.TextFormattingMode="Ideal" 
      TextOptions.TextRenderingMode="Auto"
      Background="#FFFAFAFA"
      FontFamily="{DynamicResource MaterialDesignFont}">
    <Page.Resources>
        <Style x:Key="ComboBox" TargetType="ComboBox" 
               BasedOn="{StaticResource MaterialDesignComboBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="205"/>
            <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" 
                    Value="#FF436EB1"/>
        </Style>
        <Style x:Key="TextBox" TargetType="TextBox" 
               BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Width" Value="205"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
        </Style>
        <Style x:Key="PasswordBox" TargetType="PasswordBox" 
               BasedOn="{StaticResource MaterialDesignPasswordBox}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Width" Value="205"/>
            <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
        </Style>
        <Style TargetType="materialDesign:PackIcon">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Foreground" Value="#FF2A73B4"/>
            <Setter Property="Margin" Value="7"/>
        </Style>
        <Style TargetType="WrapPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style x:Key="Button" TargetType="Button" 
               BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Arial Narrow"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2"/>
        </Style>
        <Style x:Key="ButtonValid" TargetType="Button" 
               BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Arial Narrow"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=LoginBox}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=NameBox}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=SurNameBox}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=EmailBox}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=PhoneBox}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    <StackPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="Account"/>
            <TextBox x:Name="LoginBox"
                Style="{Binding Source={StaticResource TextBox}}"
                materialDesign:HintAssist.Hint="Логин"
                materialDesign:HintAssist.HelperText="введите логин">
                <TextBox.Text>
                    <Binding Path="UserLogin" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            <local:UniqLoginValidationRule ValidatesOnTargetUpdated="False"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="Key"/>
            <PasswordBox x:Name="Password"
                Style="{Binding Source={StaticResource PasswordBox}}" 
                materialDesign:HintAssist.Hint="Пароль"
                materialDesign:HintAssist.HelperText="введите пароль"/>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="CardAccountDetailsOutline"/>
            <TextBox x:Name="NameBox"
                Style="{Binding Source={StaticResource TextBox}}"
                materialDesign:HintAssist.Hint="Имя"
                materialDesign:HintAssist.HelperText="введите имя">
                <TextBox.Text>
                    <Binding Path="UserName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="CardAccountDetails"/>
            <TextBox x:Name="SurNameBox"
                Style="{Binding Source={StaticResource TextBox}}"
                materialDesign:HintAssist.Hint="Фамилия"
                materialDesign:HintAssist.HelperText="введите фамилию">
                <TextBox.Text>
                    <Binding Path="UserSurName" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="Email"/>
            <TextBox x:Name="EmailBox"
                Style="{Binding Source={StaticResource TextBox}}"
                materialDesign:HintAssist.Hint="Email"
                materialDesign:HintAssist.HelperText="введите e-mail">
                <TextBox.Text>
                    <Binding Path="UserEmail" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            <local:UniqEmailValidationRule ValidatesOnTargetUpdated="False"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="Phone"/>
            <TextBox x:Name="PhoneBox"
                Style="{Binding Source={StaticResource TextBox}}"
                materialDesign:HintAssist.Hint="+38"
                materialDesign:HintAssist.HelperText="введите телефон">
                <TextBox.Text>
                    <Binding Path="UserPhone" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                            <local:UniqPhoneValidationRule ValidatesOnTargetUpdated="False" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="Domain"/>
            <ComboBox 
                Style="{Binding Source={StaticResource ComboBox}}"
                ItemsSource="{Binding Path=Companies, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Выберите компанию"
                materialDesign:HintAssist.HelperText="подразделение"
                SelectedValue="{Binding Path=SelectedCompany, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                SelectedValuePath="Id"
                DisplayMemberPath="Name"
                IsSynchronizedWithCurrentItem="False"
                SelectedIndex="-1">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownClosed">
                        <i:InvokeCommandAction Command="{Binding Path=LoadPositionCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </WrapPanel>
        <WrapPanel>
            <materialDesign:PackIcon 
                Kind="AccountHardHat"/>
            <ComboBox 
                Style="{Binding Source={StaticResource ComboBox}}"
                ItemsSource="{Binding Path=Positions}"
                materialDesign:HintAssist.Hint="Выберите должность"
                materialDesign:HintAssist.HelperText="специальность"
                SelectedValue="{Binding Path=SelectedPosition, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                DisplayMemberPath="Name"
                SelectedValuePath="Id"
                IsSynchronizedWithCurrentItem="False"
                SelectedIndex="-1"/>
        </WrapPanel>
        <WrapPanel>
            <Button 
                Style="{Binding Source={StaticResource Button}}"
                Command="{Binding Path=LoadLoginPageCommand}"
                Content="Назад"/>
            <Button 
                Style="{Binding Source={StaticResource ButtonValid}}"
                Command="{Binding Path=RegistrationCommand}"
                CommandParameter="{Binding ElementName=Password}"
                Content="Регистрация"/>
        </WrapPanel>
    </StackPanel>
</Page>
